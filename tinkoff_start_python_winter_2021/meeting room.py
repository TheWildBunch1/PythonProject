"""Миша сидел в переговорке и решил нарисовать ее план на листке бумаги. Когда он закончил рисовать план переговорки,
он положил лист с планом на пол переговорки. Теперь ему стало интересно: а есть ли на плане точка, которая лежит ровно на том месте пола, за которое она отвечает?
Помогите ему найти эту точку.
Формат входных данных
Переговорка и ее план имеют форму прямоугольника. Первая строка входного файла содержит два вещественных числа: координаты X и Y переговорки (1≤X≤1000,1≤Y≤1000).
Координаты углов переговорки равны (0,0), (X,0), (X,Y), (0,Y). Во второй строке файла даются восемь вещественных чисел, описывающих положение углов плана переговорки.
Сначала вводятся координаты того угла плана, который соответствует углу переговорки с координатами (0,0), затем — (X,0), (X,Y), наконец, (0,Y).
Гарантируется, что входные данные корректны, то есть план является прямоугольником, линейные размеры которого соответствуют размерам переговорки,
а также он не выходит за границы перегородки. Все числа во входном файле вещественные, заданы с точностью 5 знаков после десятичной точки. План выполнен в масштабе не менее 0.0001 и строго менее 1.
Формат результата
Выведите два вещественных числа — координаты неподвижной точки в координатах переговорки. Выводить число нужно с точностью не менее четырех знаков после запятой.
"""

n = input().split()
x, y = float(n[0]), float(n[1])
t = input().split()
p1_X, p1_Y, p2_X, p2_Y, p3_X, p3_Y, p4_X, p4_Y = float(t[0]), float(t[1]), float(t[2]), float(t[3]), float(t[4]), float(t[5]), float(t[6]), float(t[7])
y1 = p1_X
y2 = p1_Y
a1 = (p2_X - y1) / x
a3 = (p2_Y - y2) / x
a2 = (p4_X - y1) / y
a4 = (p4_Y - y2) / y
x_old = 0
y_old = 0
x_new = p1_X
y_new = p1_Y
while ((x_new - x_old) * (x_new - x_old) + (y_new - y_old) * (y_new - y_old) > 1e-9):
    x_old = x_new
    y_old = y_new
    x_new = a1 * x_old + a2 * y_old + y1
    y_new = a3 * x_old + a4 * y_old + y2
def toFixed(x_new, digits=0):
    return f"{x_new:.{digits}f}"
toFixed(x_new, 0)
print(x_new, y_new)